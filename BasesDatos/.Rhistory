install.packages("devtools")
devtools::install_github("IRkernel/IRkernel")
devtools::install_github("IRkernel/IRkernel")
devtools::install_github("IRkernel/IRkernel")
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
install.packages(c("repr", "IRdisplay", "evaluate", "crayon", "pbdZMQ", "devtools", "uuid", "digest"))
install.packages(c("repr", "IRdisplay", "evaluate", "crayon", "pbdZMQ", "devtools", "uuid", "digest"))
install.packages(c("repr", "IRdisplay", "evaluate", "crayon", "pbdZMQ", "devtools", "uuid", "digest"))
install.packages(c("repr", "IRdisplay", "evaluate", "crayon", "pbdZMQ", "devtools", "uuid", "digest"))
install.packages(c("repr", "IRdisplay", "evaluate", "crayon", "pbdZMQ", "devtools", "uuid", "digest"))
install.packages(c("repr", "IRdisplay", "evaluate", "crayon", "pbdZMQ", "devtools", "uuid", "digest"))
install.packages(c("repr", "IRdisplay", "evaluate", "crayon", "pbdZMQ", "devtools", "uuid", "digest"))
install.packages(c("repr", "IRdisplay", "evaluate", "crayon", "pbdZMQ", "devtools", "uuid", "digest"))
install.packages(c("repr", "IRdisplay", "evaluate", "crayon", "pbdZMQ", "devtools", "uuid", "digest"))
install.packages(c("repr", "IRdisplay", "evaluate", "crayon", "pbdZMQ", "devtools", "uuid", "digest"))
install.packages(c("repr", "IRdisplay", "evaluate", "crayon", "pbdZMQ", "devtools", "uuid", "digest"))
install.packages(c("repr", "IRdisplay", "evaluate", "crayon", "pbdZMQ", "devtools", "uuid", "digest"))
install.packages(c("repr", "IRdisplay", "evaluate", "crayon", "pbdZMQ", "devtools", "uuid", "digest"))
install.packages(c("repr", "IRdisplay", "evaluate", "crayon", "pbdZMQ", "devtools", "uuid", "digest"))
install.packages(c("repr", "IRdisplay", "evaluate", "crayon", "pbdZMQ", "devtools", "uuid", "digest"))
install.packages(c("repr", "IRdisplay", "evaluate", "crayon", "pbdZMQ", "devtools", "uuid", "digest"))
devtools::install_github("IRkernel/IRkernel")
install.packages("IRkernel")
install.packages("RMySQL")
### SQL #########################################################
library(RMySQL)
db <- dbConnect(MySQL(), user="root", hots = "localhots",
password = "admin", dbname = "dbpendientes")
db <- dbConnect(MySQL(), user="root", hots = "localhots",
password = "admin", dbname = "dbpendientes")
library(DBI)
con <- dbConnect(odbc::odbc(), "MySQL Connection", timeout = 10)
dbListTables(con)
res <- dbSendQuery(con, "SELECT * FROM personas")
res
dbFetch(res)
# Realizar la consulta
res <- dbSendQuery(con, "SELECT * FROM departaments")
#Traer todos los registro de la consulta
df.personas <- dbFetch(res)
View(df.personas)
dbFetch(res)
# Realizar la consulta
res <- dbSendQuery(con, "SELECT * FROM personas")
#Traer todos los registro de la consulta
df.personas <- dbFetch(res)
View(df.personas)
View(con)
mtcars
dbWriteTable(con, "mtcars", mtcars)
# Listar las tablas
dbListTables(con)
library(gdata)
TomaDatos<- function(NumeroPersonas = 5){
Genero <- vector()
Edad <- vector()
Trabaja <- vector()
Lenguaje <- vector()
Interes <- vector()
for (i in 1:NumeroPersonas) {
Genero[i] <- readline("Por favor ingrese su genero (M/F) : ")
Edad[i] <- as.integer(readline("Por favor ingrese su edad : "))
Trabaja[i] <- readline("Se encuentra trabajando o a trabajado (s/n) : ")
Lenguaje[i] <- readline("Cual es su lenguaje de programacion favorito: \na)Python\nb)R")
Interes[i] <- readline("Cual es su mayor interes al estar en el semillero: \na) Programación \nb)Analítica de datos\nc)Inteligencia Artificial \nd)La comunidad ")
revisa <- readline("Quiere revisar la información ingresada? (s/n): ")
if (revisa == "s" || revisa == "S") {
x <- paste("Genero: ", Genero[i]," " ,"Edad: ",Edad[i],"  ", "Trabaja",
Trabaja[i], "Lenguaje: ", case(Lenguaje[i], "Python"= "a","R"= "b"),
"  ", "Interes: ", case(Interes[i],"Programación"="a", "Analítica de datos"="b",
"Inteligencia Artificial"="c", "La comunidad" = "d"))
print(x)
cat("Llame a el siguiente interesado")
}
else{
cat("Llame a el siguiente interesado\n\n")
}}
Quiere <- readline("Que le gustaria hacer ahora: \na) Ver el data frame de la informaciòn\nb)Ver un resumen de la informaciòn ")
if (Quiere == "a") {
base <- data.frame(Genero,Edad,Trabaja,Lenguaje, Interes)
base
}
else{
H <- ifelse(Genero == "M" | Genero == "m" , 1, 0)
f <- ifelse(Genero == "F" | Genero == "f", 1, 0)
ho <- 0
for (i in 1:length(H)) {
ho <- ho + H[i]
}
fe <- 0
for (i in 1:length(f)) {
fe <- fe + f[i]
}
Edad1 <- 0
for (j in 1:length(Edad)) {
Edad1 = Edad[j] + Edad1
Edad1 = Edad1/length(Edad)
}
resumen <- list(EdadPromedio = Edad1, FrecuenciaGenero = data.frame(Hombres = ho, Mujeres = fe))
resumen
}
}
TomaDatos(2)
install.packages("gdata")
library(gdata)
TomaDatos<- function(NumeroPersonas = 5){
Genero <- vector()
Edad <- vector()
Trabaja <- vector()
Lenguaje <- vector()
Interes <- vector()
for (i in 1:NumeroPersonas) {
Genero[i] <- readline("Por favor ingrese su genero (M/F) : ")
Edad[i] <- as.integer(readline("Por favor ingrese su edad : "))
Trabaja[i] <- readline("Se encuentra trabajando o a trabajado (s/n) : ")
Lenguaje[i] <- readline("Cual es su lenguaje de programacion favorito: \na)Python\nb)R")
Interes[i] <- readline("Cual es su mayor interes al estar en el semillero: \na) Programación \nb)Analítica de datos\nc)Inteligencia Artificial \nd)La comunidad ")
revisa <- readline("Quiere revisar la información ingresada? (s/n): ")
if (revisa == "s" || revisa == "S") {
x <- paste("Genero: ", Genero[i]," " ,"Edad: ",Edad[i],"  ", "Trabaja",
Trabaja[i], "Lenguaje: ", case(Lenguaje[i], "Python"= "a","R"= "b"),
"  ", "Interes: ", case(Interes[i],"Programación"="a", "Analítica de datos"="b",
"Inteligencia Artificial"="c", "La comunidad" = "d"))
print(x)
cat("Llame a el siguiente interesado")
}
else{
cat("Llame a el siguiente interesado\n\n")
}}
Quiere <- readline("Que le gustaria hacer ahora: \na) Ver el data frame de la informaciòn\nb)Ver un resumen de la informaciòn ")
if (Quiere == "a") {
base <- data.frame(Genero,Edad,Trabaja,Lenguaje, Interes)
base
}
else{
H <- ifelse(Genero == "M" | Genero == "m" , 1, 0)
f <- ifelse(Genero == "F" | Genero == "f", 1, 0)
ho <- 0
for (i in 1:length(H)) {
ho <- ho + H[i]
}
fe <- 0
for (i in 1:length(f)) {
fe <- fe + f[i]
}
Edad1 <- 0
for (j in 1:length(Edad)) {
Edad1 = Edad[j] + Edad1
Edad1 = Edad1/length(Edad)
}
resumen <- list(EdadPromedio = Edad1, FrecuenciaGenero = data.frame(Hombres = ho, Mujeres = fe))
resumen
}
}
TomaDatos(2)
library(ggplot2)
library(tidyverse)
x <- c(50, 70, 90 , 110, 55)
png(filename = 'Logo nb.png')
par(bg = '#242424')
barplot(x, col = 'white', axes = F, border = F)
text(x = 50, y = 50, labels = 'ydmarinb')
dev.off()
#png(filename = 'Logo nb.png')
par(bg = '#242424')
barplot(x, col = 'white', axes = F, border = F)
text(x = 10, y = 10, labels = 'ydmarinb')
text(x = 10, y = 10, labels = 'ydmarinb', col = 'white')
#png(filename = 'Logo nb.png')
par(bg = '#242424')
barplot(x, col = 'white', axes = F, border = F)
text(x = 10, y = 10, labels = 'ydmarinb', col = 'white')
text(x = 10, y = 70, labels = 'ydmarinb', col = 'white')
x <- c(50, 70, 90 , 110, 55)
#png(filename = 'Logo nb.png')
barplot(x, col = 'skyblue', axes = T, border = T)
#png(filename = 'Logo nb.png')
barplot(x, col = 'skyblue', axes = T, border = T, las = 1)
#png(filename = 'Logo nb.png')
barplot(x, col = 'skyblue', axes = T, border = T, las = 1, ylim = c(0, 150))
#png(filename = 'Logo nb.png')
barplot(x, col = 'skyblue', las = 1, ylim = c(0, 150))
x <- sample(1:9, 60, replace = T)
x <- sample(1:9, 60, replace = T)
x
y <- sample(c('bueno, malo'), x = 60, replace = T)
y <- sample(c('bueno', 'malo'), x = 60, replace = T)
data <- iris
data
barplot(table(data$Species))
iris3
x <- 1:10
y <- x ^2
y
plot(x, y)
plot(x, y, ylim = c(0, 200))
plot(x, y, xlim = c(0, 200))
plot(x, y,ylim = c(0, 100) , xlim = c(0, 200))
plot(x, y,ylim = c(0, 200) , xlim = c(0, 200))
plot(x, y)
plot(x, y, ylim = c(0, 200))
png(filename = 'plot1.png')
plot(x, y)
dev.off()
png(filename = 'plot2.png')
plot(x, y,ylim = c(0, 200) , xlim = c(0, 200))
dev.off()
png(filename = 'plot3.png')
plot(x, y, ylim = c(0, 200))
dev.off()
plot(x, y, type = 'l')
plot(x, y,ylim = c(20, 200) , xlim = c(0, 200))
plot(x, y, type = 'l', ylim = c(2, 50))
x <- 4:10
y <- x ^2
plot(x, y, type = 'l', ylim = c(2, 50))
plot(x, y, type = 'l', ylim = c(2, 100))
x <- c(13, 12, 12, 11, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1)
boxplot(x)
boxplot
getAnywhere(boxplot())
getAnywhere(boxplot)
methods(boxplot)
getAnywhere(boxplot.default())
quantile(x)
sort(x)
length(sort(x)))
length(sort(x))
sort(x)
16*0.75
12 + 13 /2
(12 + 13)/2
(12 + 13)/2
16 /4
x <- sort(x)
(x[12] + x[13])/2
hist(x)
x <- c(19, 18, 6, 5, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1)
boxplot(x)
0.750*2
1 == '1'
1 == '1'
TRUE == '1'
1 == T
1 == '1'
1 == class('1')
class('1')
x <- c(2, 4,5 6,8, 3, 6,8 0, 6, 7,0)
x <- c(2, 4,5 6,8, 3, 6,8,0, 6, 7,0)
x <- c(2, 4,5, 6,8, 3, 6,8,0, 6, 7,0)
boxplot(x)
quantile(x)
2 = '2'
2 == '2'
234 == '234'
343983498436 == '343983498436'
1 = '1'
1 == '1'
shiny::runApp('C:/Users/ydmar/OneDrive/Escritorio/prueba')
x <- c(1, 3, 4, 6)
x
x
c(1, 3, 4, 6)
x <- c(1, 3, 4, 6)
x <- c(1, 3, 4, 6)
x
print(x)
getwd()
setwd('CurosCienciasDatos/01 - Mineria de datos/BasesDatos/')
dir()
getwd()
setwd('CurosCienciasDatos/01 - Mineria de datos/BasesDatos/')
setwd('CurosCienciasDatos/01 - Mineria de datos/BasesDatos/')
entero <- 2
entero
entero <- 2
entero
numerco <- 2.3
numerico
numerico <- 2.3
numerico
class(entero)
class(numerico)
factor_ <- factor('hola')
factor_
caracter
caracter <- 'hola'
caracter
V <- c(2, 5, 7, 9, 9)
V
v <- 1:10
v1 <- 1:10
V <- c(2, 5, 7, 9, 9)
v2 <- seq(1, 10, 4)
v2
v3 <- rep(2, 5)
v3
V <- c(2, 5, 7, 9, '9')
V
v4 <- gl(2,4, labels = c("Hombre", "Mujer"))
v4
is.vector(v)
is.vector(caracter)
boleanos <- T
is.vector(boleanos)
length(v)
length(v) # len(v)
v[1]
v[1:]
v[1:4]
v[-4]
v * v1
v
v1
v %*% v1
sum(v * v1)
V <- c(2, 5, 7, 9, '9', 8)
matrix(data = v, nrow = 2, byrow = T)
m <- matrix(data = v, nrow = 2, byrow = T)
m[1][2]
m[1, 1]
m[3]
matrix(data = 1:4, nrow = 2, byrow = T)
matrix(data = 1:4, nrow = 2, byrow = F)
matrix(data = 1:4, nrow = 2)
matrix(data = c(4, 5, 9, 11, 13, -15, nrow = 2)
matrix(data = c(4, 5, 9, 11, 13, -15, nrow = 2))
matrix(data = c(4, 5, 9, 11, 13, -15, nrow = 2))
matrix(data = c(4, 5, 9, 11, 13, -15), nrow = 2)
matrix(data = c(4, 5, 9, 11, 13, -15), nrow = 2, byrow = T)
# array
arreglo <- array(c(rep(1,5),rep(3,5),2,6), c(2,3,2))
arreglo
arreglo[1]
arreglo[1][1]
arreglo[1][2]
arreglo[[1]]
rep(1,5)
rep(3,5)
c(rep(1,5),rep(3,5),2,6)
c(2,3,2)
c(rep(1,5),rep(3,5),2,6), c(2,3,2)
# array
arreglo <- array(c(rep(1,5),rep(3,5),2,6), c(2,3,2))
arreglo
# array
arreglo <- array(c(rep(1,5),rep(3,5),2,6,2,3,2))
arreglo
# array
arreglo <- array(c(rep(1,5),rep(3,5),2,6), c(2,3,2))
arreglo
# data frame
vec_1 <- 1:5
vec_2 <- c("a", "e", "i", "o", "u")
marco.datos <- data.frame(Numeros = vec_1, Letras = vec_2)
marco.datos
View(marco.datos)
marco.datos[1,2]
marco.datos[1,'Letras']
marco.datos[1,c('Letras', 'Numeros')]
marco.datos[1,1:2]
marco.datos[1,2:1]
marco.datos[marco.datos$Numeros > 3, ]
marco.datos[marco.datos[, Numeros] > 3, ]
marco.datos[marco.datos[, 'Numeros'] > 3, ]
vec_1 <- 1:5
vec_2 <- c("a", "e", "i", "o", "u")
marco.datos <- data.frame(Numeros = vec_1, Letras = vec_2)
matriz <- matrix(c(1,2,36,9,5,2),ncol = 3, byrow = T)
arreglo <- array(c(rep(1,5),rep(3,5),2,6), c(2,3,2))
marco.datos <- data.frame(Numeros = vec_1, Letras = vec_2)
lista <- list(marco.datos, matriz, arreglo)
lista
names(lista) <- c('primero', 'segundo', 'tercero')
lista
c(2,5) %in% c(3,6,7,9,0, 6, 8)
ifelse(5>3, 'hola', 'dhhwshihd')
1:10
print(i)
for (i in 1:10) {
print(i)
}
x <- 0
# funciones
f <- function(x){
x ^2
}
f(3)
# funciones
f <- function(x){
return(x ^2)
}
f(3)
p <- f(3)
p
# funciones
f <- function(x){
(x ^2)
}
p <- f(3)
p
g <- function(a, b){
return(a * b)
}
g(3, 6)
g(3, 6)
g <- function(a = 6, b){
return(a * b)
}
g( 6)
g( b = 6)
g( ,b = 6)
g( , 6)
install.packages("gdata")
library(gdata)
TomaDatos<- function(NumeroPersonas = 5){
Genero <- vector()
Edad <- vector()
Trabaja <- vector()
Lenguaje <- vector()
Interes <- vector()
for (i in 1:NumeroPersonas) {
Genero[i] <- readline("Por favor ingrese su genero (M/F) : ")
Edad[i] <- as.integer(readline("Por favor ingrese su edad : "))
Trabaja[i] <- readline("Se encuentra trabajando o a trabajado (s/n) : ")
Lenguaje[i] <- readline("Cual es su lenguaje de programacion favorito: \na)Python\nb)R")
Interes[i] <- readline("Cual es su mayor interes al estar en el semillero: \na) Programación \nb)Analítica de datos\nc)Inteligencia Artificial \nd)La comunidad ")
revisa <- readline("Quiere revisar la información ingresada? (s/n): ")
if (revisa == "s" || revisa == "S") {
x <- paste("Genero: ", Genero[i]," " ,"Edad: ",Edad[i],"  ", "Trabaja",
Trabaja[i], "Lenguaje: ", case(Lenguaje[i], "Python"= "a","R"= "b"),
"  ", "Interes: ", case(Interes[i],"Programación"="a", "Analítica de datos"="b",
"Inteligencia Artificial"="c", "La comunidad" = "d"))
print(x)
cat("Llame a el siguiente interesado")
}
else{
cat("Llame a el siguiente interesado\n\n")
}}
Quiere <- readline("Que le gustaria hacer ahora: \na) Ver el data frame de la informaciòn\nb)Ver un resumen de la informaciòn ")
if (Quiere == "a") {
base <- data.frame(Genero,Edad,Trabaja,Lenguaje, Interes)
base
}
else{
H <- ifelse(Genero == "M" | Genero == "m" , 1, 0)
f <- ifelse(Genero == "F" | Genero == "f", 1, 0)
ho <- 0
for (i in 1:length(H)) {
ho <- ho + H[i]
}
fe <- 0
for (i in 1:length(f)) {
fe <- fe + f[i]
}
Edad1 <- 0
for (j in 1:length(Edad)) {
Edad1 = Edad[j] + Edad1
Edad1 = Edad1/length(Edad)
}
resumen <- list(EdadPromedio = Edad1, FrecuenciaGenero = data.frame(Hombres = ho, Mujeres = fe))
resumen
}
}
TomaDatos(2)
